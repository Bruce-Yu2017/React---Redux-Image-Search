{"version":3,"sources":["reducers/index.js","actions/index.js","components/searchBar.js","components/image.js","components/imagesList.js","components/app.js","index.js"],"names":["combineReducers","onchangeValue","state","arguments","length","undefined","action","type","payload","allImage","onChangeSearchValue","val","SearchBar","submitForm","event","preventDefault","axios","get","params","query","_this","props","onchangeVal","headers","Authorization","then","res","receiveImage","data","_this2","this","react_default","a","createElement","className","onSubmit","onChange","target","value","React","Component","connect","allImages","Image","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editSpan","height","imageRef","current","clientHeight","span","Math","ceil","setState","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","src","regular","alt","imageLists","console","log","images","img","map","components_image","key","id","App","searchBar","total","imagesList","results","ReactDOM","render","es","store","createStore","app","document","getElementById"],"mappings":"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","file":"static/js/main.3663348e.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\n\nconst onChangeReducer = (state='', action) => {\n    if(action.type === 'ON_CHANGE') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst receiveImageReducer = (state=[], action) => {\n    if(action.type === 'REVEIVE') {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    onchangeValue: onChangeReducer,\n    allImage: receiveImageReducer\n})","\n\nexport const onChangeSearchValue = (val) => {\n  return {\n    type: \"ON_CHANGE\",\n    payload: val\n  }\n}\nexport const receiveImage = (val) => {\n  return {\n    type: \"REVEIVE\",\n    payload: val\n  }\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { onChangeSearchValue, receiveImage } from '../actions';\nimport axios from 'axios';\n\nclass SearchBar extends React.Component {\n\n  submitForm = (event) => {\n    event.preventDefault();\n    axios.get('https://api.unsplash.com/search/photos', {\n      params: { query: this.props.onchangeVal },\n      headers: {\n        Authorization: 'Client-ID 113120c18449d0ccd9f12224d676e3bc12966f55f346504a96291e9fabc11e0b'\n      }\n    }).then((res) => {\n        this.props.receiveImage(res.data);\n    })\n  }\n\n  render() {\n    return (\n      <div className='ui segment'>\n        <form className='ui form' onSubmit={this.submitForm}>\n          <div className='field'>\n            <label>Bruce's React & Redux Image Search</label>\n            <input \n              onChange={(event) => { \n                this.props.onChangeSearchValue(event.target.value) \n              }}  \n              value={this.props.onchangeVal}\n            />\n\n          </div>\n        </form>\n        \n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    onchangeVal: state.onchangeValue,\n    allImages: state.allImage\n  }\n}\n\nexport default connect(mapStateToProps, { onChangeSearchValue, receiveImage })(SearchBar);\n","import React from 'react'\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n        this.imageRef = React.createRef();\n        this.state = { span: 0 };\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.editSpan)\n    }\n\n    editSpan = () => {\n        const height = this.imageRef.current.clientHeight;\n        const span = Math.ceil(height / 20);\n        this.setState({ span });\n    }\n\n    render() {\n        const {description, urls} = this.props.image;\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.span}` }}>\n                <img ref={this.imageRef} src={urls.regular} alt={description} />\n            </div>\n        )\n    }\n}\n\nexport default Image;","import React from 'react'\nimport '../image.css';\nimport Image from './image';\n\nconst imageLists = (props) => {\n    console.log(props.images)\n    const img = props.images.map((image) => {\n        return <Image key={image.id} image={image} />\n    })\n    return <div className='image-list'>{ img }</div>;\n}\n\nexport default imageLists;","import React from 'react'\n\nimport SearchBar from './searchBar';\nimport ImageLists from './imagesList';\nimport { connect } from 'react-redux';\nimport { onChangeSearchValue } from '../actions';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='ui container'>\n        <SearchBar />\n\n        {this.props.allImages.total > 0 && \n        <span>We got {this.props.allImages.total} images.</span>}\n\n        {this.props.allImages.total > 0 && \n        <ImageLists images={this.props.allImages.results} />}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    onchangeVal: state.onchangeValue,\n    allImages: state.allImage\n  }\n}\n\nexport default connect(mapStateToProps, { onChangeSearchValue })(App);","import React from 'react'\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport combineReducers from './reducers';\nimport App from './components/app';\n\n\n\n\nReactDOM.render(\n  <Provider store={createStore(combineReducers)}>\n    <App />\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}